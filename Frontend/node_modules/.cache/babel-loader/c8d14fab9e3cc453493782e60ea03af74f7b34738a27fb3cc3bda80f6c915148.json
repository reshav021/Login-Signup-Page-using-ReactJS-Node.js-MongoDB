{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Project\\\\login-signup\\\\src\\\\components\\\\LoginSignup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginSignup() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginContent, setLoginContent] = useState(true);\n  const AWS = require('aws-sdk');\n\n  // Define an async function to use await\n  async function fetchS3Object() {\n    const s3 = new AWS.S3();\n    try {\n      const my_file = await s3.getObject({\n        Bucket: \"cyclic-sparkling-plum-sparrow-eu-central-1\",\n        Key: \"some_files/my_file.json\"\n      }).promise();\n\n      // Do something with my_file\n      console.log(my_file);\n    } catch (error) {\n      console.error(\"Error fetching S3 object:\", error);\n    }\n  }\n\n  // Call the async function\n  fetchS3Object();\n  const navigate = useNavigate();\n  const handleSubmitForm = async () => {\n    if (loginContent) {\n      // Handle the login logic and make a request to the backend here\n      try {\n        const response = await fetch(\"https://sparkling-plum-sparrow.cyclic.app/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        if (response.ok) {\n          navigate('/home'); // Redirect to Homepage\n        } else {\n          alert(\"Login failed\");\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error);\n        alert(\"An error occurred during login\");\n      }\n    } else {\n      // Handle signup logic and make a request to the backend here\n      try {\n        console.log(name, email, password);\n        const response = await fetch(\"https://sparkling-plum-sparrow.cyclic.app/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n        if (response.ok) {\n          alert(\"Signup successful\");\n          setLoginContent(true); // Switch to login after successful signup\n        } else {\n          const errorData = await response.json(); // Parse the error response from the server\n          console.error(\"Signup failed:\", errorData.error);\n          alert(\"Signup failed: \" + errorData.error);\n        }\n      } catch (error) {\n        console.error(\"Signup error:\", error);\n        alert(\"An error occurred during signup\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: loginContent ? \"container-active\" : \"\",\n        onClick: () => setLoginContent(true),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !loginContent ? \"container-active\" : \"\",\n        onClick: () => setLoginContent(false),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [!loginContent && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmitForm,\n        children: [\" \", loginContent ? \"LOGIN\" : \"SIGNUP\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [loginContent ? \"Don't have an Account?\" : \"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"toggleLoginFormBtn\",\n        onClick: () => setLoginContent(!loginContent),\n        children: loginContent ? \"Create new account\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginSignup, \"cEL1vAV/2NUE0y6ulsXjxVtlY9c=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginSignup","_s","name","setName","email","setEmail","password","setPassword","loginContent","setLoginContent","AWS","require","fetchS3Object","s3","S3","my_file","getObject","Bucket","Key","promise","console","log","error","navigate","handleSubmitForm","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","id","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Project/login-signup/src/components/LoginSignup.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginSignup() {\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [loginContent, setLoginContent] = useState(true)\r\n\r\n  const AWS = require('aws-sdk');\r\n\r\n// Define an async function to use await\r\nasync function fetchS3Object() {\r\n  const s3 = new AWS.S3();\r\n\r\n  try {\r\n    const my_file = await s3.getObject({\r\n      Bucket: \"cyclic-sparkling-plum-sparrow-eu-central-1\",\r\n      Key: \"some_files/my_file.json\",\r\n    }).promise();\r\n\r\n    // Do something with my_file\r\n    console.log(my_file);\r\n  } catch (error) {\r\n    console.error(\"Error fetching S3 object:\", error);\r\n  }\r\n}\r\n\r\n// Call the async function\r\nfetchS3Object();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmitForm = async () => {\r\n\r\n    if (loginContent) {\r\n      // Handle the login logic and make a request to the backend here\r\n      try {\r\n        const response = await fetch(\"https://sparkling-plum-sparrow.cyclic.app/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ email, password }),\r\n        })\r\n\r\n        if (response.ok) {\r\n          navigate('/home');    // Redirect to Homepage\r\n        } else {\r\n          alert(\"Login failed\")\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Login error:\", error)\r\n        alert(\"An error occurred during login\")\r\n      }\r\n    } else {\r\n      // Handle signup logic and make a request to the backend here\r\n      try {\r\n        console.log(name, email, password)\r\n        const response = await fetch(\"https://sparkling-plum-sparrow.cyclic.app/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name, email, password }),\r\n        })\r\n\r\n        if (response.ok) {\r\n          alert(\"Signup successful\")\r\n          setLoginContent(true) // Switch to login after successful signup\r\n        } else {\r\n          const errorData = await response.json() // Parse the error response from the server\r\n          console.error(\"Signup failed:\", errorData.error)\r\n          alert(\"Signup failed: \" + errorData.error)\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Signup error:\", error)\r\n        alert(\"An error occurred during signup\")\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className={loginContent ? \"container-active\" : \"\"} onClick={() => setLoginContent(true)}>\r\n          <h1>Login</h1>\r\n        </div>\r\n        <div className={!loginContent ? \"container-active\" : \"\"} onClick={() => setLoginContent(false)}>\r\n          <h1>Signup</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <form>\r\n        {!loginContent && (\r\n          <input type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)} /> )} \r\n          <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} /> <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} /> \r\n          <button type=\"button\" onClick={handleSubmitForm}> {loginContent ? \"LOGIN\" : \"SIGNUP\"} </button>\r\n      </form>\r\n\r\n      <h5>\r\n        {loginContent ? \"Don't have an Account?\" : \"Already have an account?\"}{\" \"}\r\n        <button id=\"toggleLoginFormBtn\" onClick={() => setLoginContent(!loginContent)}>\r\n          {loginContent ? \"Create new account\" : \"Login\"}\r\n        </button>\r\n      </h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginSignup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}